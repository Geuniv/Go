// 9-3
package main

import (
	"crypto/sha512"
	"fmt"
)

// Go 언어에서는 해시, 대칭키 알고리즘, 공개키 알고리즘 등 다양한 암호화 알고리즘을  패키지로 제공함
// - 해시 알고리즘
//   - 데이터의 고유한 해시 값을 추출해 냄
//   - 이 해시 값으로 데이터를 만들어 낼 수는 없음
//   - 단방향 암호화 알고리즘이며 패스워드를 저장할 때 사용함
// - 대칭키 알고리즘
//   - 암호화하는 키와 복호화 하는 키가 동일함
// - 공개키 알고리즘
//   - 암호화하는 키와 복호화하는 키가 다름
//   - 암호화하는 키는 공개키라고 하여 외부에 공개하고, 복호화하는 키는 비밀키라고 하여 외부에 노출하지 않음

// - 해시 알고리즘 사용
//   - 데이터에서 해시 값을 추출함
//   - Sha512.New 함수를 사용하여 새로운 인스턴스 생성하였다면 Write 함수로 데이터를 넣은 뒤 Sum 함수로 해시 값을 만듦. Sum 함수에는 nil을 넣어 줌

func main() {
	s := "Hello, world !"
	h1 := sha512.Sum512([]byte(s)) // 문자열의 SHA512 해시 값 추출
	fmt.Printf("%x\n", h1)

	sha := sha512.New()          // SHA512 해시 인스턴스 생성
	sha.Write([]byte("Hello, ")) // 해시 인스턴스에 데이터 추가
	sha.Write([]byte("world !")) // 해시 인스턴스에 데이터 추가
	h2 := sha.Sum(nil)           // 해시 인스턴스에 저장된 데이터의 SHA512 해시 값 추출
	fmt.Printf("%x\n", h2)
}
